import cv2
import mediapipe as mp
import numpy as np
from tensorflow.keras.models import load_model

actions = ['zero', 'claw', 'five']
seq_length = 30

model = load_model('models1/model.h5')

mp_drawing = mp.solutions.drawing_utils
mp_drawing_styles = mp.solutions.drawing_styles
mp_hands = mp.solutions.hands
hands = mp_hands.Hands(
    max_num_hands=1,
    min_detection_confidence=0.5,
    min_tracking_confidence=0.5)

cap = cv2.VideoCapture(0)

seq = []
action_seq = []

timestandard = 0
timecount1 = 0
timecount2 = 0
timecount3 = 0

while cap.isOpened():
    res, frame = cap.read()
    img0 = frame.copy()

    frame = cv2.flip(frame, 1)
    image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    result = hands.process(image)

    if result.multi_hand_landmarks is not None:
        for hand_landmarks in result.multi_hand_landmarks:
            joint = np.zeros((21, 4))
            for j, lm in enumerate(hand_landmarks.landmark):
                joint[j] = [lm.x, lm.y, lm.z, lm.visibility]

            v1 = joint[[0,1,2,3,0,5,6,7,0,9,10,11,0,13,14,15,0,17,18,19], :3]
            v2 = joint[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], :3]
            v = v2 - v1
            v = v / np.linalg.norm(v, axis=1)[:, np.newaxis]

            angle = np.arccos(np.einsum('nt,nt->n',
                v[[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18],:], 
                v[[1,2,3,5,6,7,9,10,11,13,14,15,17,18,19],:]))

            angle = np.degrees(angle)

            d = np.concatenate([joint.flatten(), angle])

            seq.append(d)

            if len(seq) < seq_length:
                continue

            input_data = np.expand_dims(np.array(seq[-seq_length:], dtype=np.float32), axis=0)

            y_pred = model.predict(input_data).squeeze()

            i_pred = int(np.argmax(y_pred))
            conf = y_pred[i_pred]

            if i_pred == 0 and timestandard == 0:
                timecount1 += 1
                if timecount1 == 30:
                    timecount1 = 0
                    timecount2 = 0
                    timecount3 = 0
                    timestandard = 1
                    print("zero")
            
            if i_pred == 1 and timestandard == 0:
                timecount2 += 1
                if timecount2 == 30:
                    timecount1 = 0
                    timecount2 = 0
                    timecount3 = 0
                    timestandard = 1
                    print("claw")
            
            if i_pred == 2 and timestandard == 0:
                timecount3 += 1
                if timecount3 == 30:
                    timecount1 = 0
                    timecount2 = 0
                    timecount3 = 0
                    timestandard = 1
                    print("five")

            if conf < 0.9:
                continue

            action = actions[i_pred]
            action_seq.append(action)

            if len(action_seq) < 3:
                continue

            this_action = ''
            if action_seq[-1] == action_seq[-2] == action_seq[-3]:
                this_action = action

            cv2.putText(frame, f'{this_action.upper()}', org=(int(hand_landmarks.landmark[0].x * frame.shape[1]), int(hand_landmarks.landmark[0].y * frame.shape[0] + 50)), fontFace=cv2.FONT_HERSHEY_SIMPLEX, fontScale=1, color=(255, 255, 255), thickness=2)

    else:
        timestandard = 0

    cv2.imshow('MediaPipe Hands', frame)
    key = cv2.waitKey(5) & 0xFF
    if key == 27:
        break

cv2.destroyAllWindows()
cap.release()
